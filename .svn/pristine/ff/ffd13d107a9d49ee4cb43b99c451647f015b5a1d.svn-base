define(function(require, exports, module) {
(function(window) {
  /*顶级命名空间*/
  window.ky = window.ky || {
      version: '1.0',
      name:'RESTful'
  };
  /*ky.utils中放置常用的公共内容*/
  ky.utils = ky.utils || {};
  /*ky.ui中放置和html元素有关的公共内容*/
  ky.ui = ky.ui || {};
  window.KU=ky.utils;/*简短别名*/
  window.KUI=ky.ui;
  /*页面相关*/
  KU.page={
          currentPage:1,
          pageSize:10
  };
  KU.cookieRelative = {
          account: 'account',
          authorization: 'Authorization',
  };
  KU.upload={
          host:'http://127.0.0.1:8079/'
  };
 
})(window);
/*自定义命名空间的公共方法*/
(function(KU) {
  var codes={
          400:'请求参数错误',
          404:'数据不存在',
          405:'请求失败,不存在此操作',
          412:'数据已修改，请刷新内容再操作',
          500:'操作失败',
          406:'数据已存在',
          401:'无权限操作',
          402:'登录失效，请登录'
  };
/**
  * code:实际的状态码
  * override：覆盖、新增公共的状态码:[{code:401,text:'无权限操作'},{code:500,text:'操作失败'}]
  */
  KU.showSText=function(code,override){
    if(override&&override.length&&override.length>0){
      var tempCodes =$.extend({},codes); 
      for(var i=0;i<override.length;i++){
        tempCodes[override[i].code]=override[i].text;
      }
      newsHint(tempCodes[code]);
    }else{
      newsHint(codes[code]);
    }
  }; 
  
  
  KU.calcSize=function(size){
  var fileSize = Math.ceil(size / 1024);
	var suffix   = 'KB';
	if (fileSize > 1000) {
		fileSize = Math.round(fileSize / 1000);
		suffix   = 'MB';
	}
	var fileSizeParts = fileSize.toString().split('.');
	fileSize = fileSizeParts[0];
	if (fileSizeParts.length > 1) {
		fileSize += '.' + fileSizeParts[1].substr(0,2);
	}
	 fileSize += suffix;
	 return fileSize;
  };
  KU.getFunction=function(menuFunctions,flag){
	  var functions;
	  if(menuFunctions&&menuFunctions.length>0){
	  if(typeof flag=='string'){
			    for(var i=0;i<menuFunctions.length;i++){
				   var funObj=menuFunctions[i];
				   if(funObj.flag==flag){
					   functions=funObj;
					   break;
				   }
			   }
	  }else{
		  functions=new Array();
		   for(var i=0;i<menuFunctions.length;i++){
			   var funObj=menuFunctions[i];
			   if($.inArray(funObj.flag, flag)!=-1){
				   functions.push(funObj);
			   }
		   }
	  }
	}
	  return functions;
  };
  
})(ky.utils);  
/*cookie相关*/

/*ajax请求处理*/
(function(KU) {  
var ajax = {};
    /*初始化方法*/
    ajax.init = function() {
    ajax.settings = {
      url: '',
      type: 'GET',
      timeout:5000, 
      dataType: 'json',
      eText: true, /*错误时提示的信息可以是字符串，也可以是[{code:401,text:'测试'},{code:500,text:'测试111'}]，指定返回状态码及提示信息*/
      sText: '', /*成功时提示的信息*/
      data: {},
      async: true,
      cache:false,
      success: function() {},
      error: function() {},
      complete: function() {},
      ajaxSetHeader: function() {}
    };
  };
  ajax.send = function(options) {
    if(options.loading==null||options.loading){//指定loading参数false则不显示
        $('body').prepend("<div id=\"loading\"   class=\"loading\"></div>");
    }
    ajax.init();
    var settings,contentType=null, data=null;
    $.extend(ajax.settings, options);
    settings = ajax.settings;
//      if (settings.dataType == 'json') {
        contentType = 'application/json; charset=UTF-8';
        if (settings.type.toUpperCase() !== 'GET') {
        	if(settings.type.toUpperCase()== 'PATCH'){/*兼容ie8等不支持新型http协议的情况*/
        		settings.type="POST";
        		settings.url+='?_method=PATCH';
        	}
          data = JSON.stringify(settings.data);
        } else {
          /*如果是get方式，则对参数进行trim*/
          for(attr in settings.data){
            if(typeof settings.data[attr]=='string'){
              settings.data[attr]=$.trim(settings.data[attr]);
            }
            }
          /*只有当url包含page，即时查询时才处理公共分页参数*/
          if (settings.url.indexOf('page') != -1){
            if(!settings.data.currentPage){
              settings.data['offset'] =(KU.page.currentPage-1)*KU.page.pageSize; /*拼接当前页*/
            }
            if(!settings.data.pageSize){
              settings.data['pageSize'] = KU.page.pageSize; /*拼接总页数 */
            }
          }
          data = settings.data;
        }
//      };
 
    $.ajax({
      url: host+settings.url,/*绝对路径，避免出错*/
      type: settings.type,
      timeout:settings.timeout,
     // dataType: settings.dataType,千万不要放开，否则容易出现兼容问题
      contentType: contentType,
      data: data,
      cache: settings.cache,
      async: settings.async,
      beforeSend: function(request) {
        var token = $.cookie(KU.cookieRelative.authorization);
        token && request.setRequestHeader(KU.cookieRelative.authorization, token);
        request.setRequestHeader('Device-Type', 1);
        settings.ajaxSetHeader.call(null, request);
      },
      success: function(responseText, statusText, xhr) {
        if (settings.sText.length > 0) { /*如果成功且提示不为空，则显示成功提示*/
          newsHint({
            className: 'newsSuccess',
            text: settings.sText
          });
        }
        settings.success.call(null, responseText, statusText, xhr);
      },
      complete: function(response) {
        $("#loading").remove();
        settings.complete.call(null, response);
      },
      error: function(response) {
        if (response.status == 402) {
        	alert('登录失效，请重新登录');
          window.location.href = '/login.html';
        } else {
          if(settings.eText==true||settings.eText.length > 0){
            if(typeof settings.eText=='string') { /*如果错误提示是string,则直接提示*/
              newsHint(settings.eText);
            }else if(typeof settings.eText=='object'||settings.eText==true){
              KU.showSText(response.status, settings.eText);
            } 
          }
          settings.error.call(null, response);
        }
      }
    });
  };
 KU.ajax = ajax;
 KU.send=ajax.send;
})(ky.utils); 
  
/*封装常用方法*/
(function(window) {
	$.fn.sd=function(){
		if($(this).val()!=''){
			return $(this).val()+' 00:00:00';
		}
	    
	  };
$.fn.ed=function(){
	if($(this).val()!=''){
		  return $(this).val()+' 23:59:59';
	}
	  };
  /* 根据参数名获得url中的参数值 */
 window.getParameter = function(name) {
     var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');
     var str=window.location.hash;
     str=str.substr(str.indexOf('?')+1);
     var r = decodeURI(str).match(reg);
     if (r != null) return  r[2];
     return null;
 };
 
 window.showHtml=function(hash){
	 window.location.hash=hash;
 };
 /**跳转方法
  * url为页面路径  可以本身就带参数如service/list.html?name=jim
  * params为跳转时需要携带的参数 格式如{name:'jim',age:25}
  * 1.target(xxx,{}):本窗口打开
  * 2.target(xxx,{},true):新窗口打开
  * 2.target(xxx,true)：新窗口打开
  **/
 window.target=function(url,params){
   /*有参数时处理参数*/
   if(typeof params=='object'){
     if(url.indexOf('?')!=-1)url+='&';else url+='?';
     for (attr in params)
     {
       url+=attr+'='+params[attr]+'&';
     }
     url=url.substring(0,url.length-1);
   }
   /*根据参数类型，判断打开窗口方式*/
   url=(url.indexOf('http')==0?url:host+url);
   switch (arguments.length) {
   case 1:
     window.location.href=url;
     break;
   case 2:
     if(typeof params=='object')window.location.href=url;else  window.open(url, url);
     break;
   case 3:
     window.open(url, url);
     break;
   default:
     window.location.href=url;
     break;
   }
   
 };
 window.c=function(info){
      window.console&&console.log(info);
     };
 window.showUploadImg=function(fileID){
	  var  $cancelFunction=$('#' + fileID).find('.cancelFunction');
	 var  fileUniqueId=$cancelFunction.attr('fileUniqueId');
	 if(fileUniqueId){
	 var id=fileID+'showUploadImg';
	 var d=dialog.get(id);
	 if(!d){
		 d=dialog({
			    id:id,
			    align:'right top',
			    content: '<img  style="border:0;max-width:450px;height:auto;margin: -17px -17px -21px -17px;" src="'+KU.upload.host+fileUniqueId+'">',
			    zIndex:-1
			});
		    d.show(document.getElementById(fileID));
	 }
	 
   }
		
 };
 window.removeUploadImg=function(fileID){
	 var id=fileID+'showUploadImg';
	 var d=dialog.get(id);
	 if(d){
		 d.remove();
	 }
};
 window.newsHint=function(options) {
     newsHint.prototype.init(options);
 };
 newsHint.prototype = {
     constructor: newsHint,
     init: function(options) {
       this.setings = {
         text: '',
         className: '',
         time: '1300',
         style: ''
       };
       this.defaults = {};
       if (typeof(options) == 'string') {
         this.defaults.text = options;
       } else {
         this.defaults = options;
       }
       this.opts = $.extend({}, this.setings, this.defaults);
       this.create();
       this.removeDilog();
     },
     create: function() {
       this.$dalog = $('<div class="newsHint '+ this.opts.className + '" style="z-index:2015;' + this.opts.style + '">' + this.opts.text + '</div>');
       this.$dalog.appendTo("body");
     },
     removeDilog: function() {
       setTimeout(function() {
         $(".newsHint").remove();
       }, this.opts.time);
     }
   };
 
 window.DLG=function(options){
	 var defaults={
			 okValue:'确定',
			 cancelValue:'关闭',
			 quickClose: true,
			 backdropOpacity: 0.3
	 };
	 $.extend(defaults, options);
	 return  dialog(defaults);
 };
})(window);
});

