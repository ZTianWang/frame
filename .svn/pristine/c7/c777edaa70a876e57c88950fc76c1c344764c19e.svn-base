package com.frame.controller;

import java.util.Date;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.frame.command.AccountCommand;
import com.frame.command.AuthorizationCommand;
import com.frame.entity.Account;
import com.frame.entity.Attachment;
import com.frame.service.AccountService;
import com.frame.service.AttachmentService;
import com.frame.utils.KVMap;

@RestController
@RequestMapping("/account")
public class AccountController {
	@Autowired
	private AccountService accountService;
	
	@Autowired
	private AttachmentService  attachmentService;
	
	@RequestMapping(method=RequestMethod.PATCH)
	public Account  patchAccount(@RequestBody AuthorizationCommand accountDti){
		System.out.println(accountDti);
		Account account=new Account();
		account.setAccount("patch方法");
		account.setCellphone("15801187545");
		System.out.println("来到patch方法");
		return account;
	}
	
	@RequestMapping(method=RequestMethod.POST)
	public Map<String,String>  postAccount(@RequestBody AccountCommand cmd){
		Account account=new Account();
		account.setAccount(cmd.getAccount());
		account.setCellphone(cmd.getCellphone());
		account.setCreateDate(new Date());
		account.setEmail(cmd.getEmail());
		account.setPassword(cmd.getPassword());
		accountService.add(account);
		
		if(cmd.getAccountHeadFile()!=null){
			for(String attId:cmd.getAccountHeadFile()){
				Attachment att=new Attachment();
				att.setId(attId);
				att.setRecordId(account.getId());
				attachmentService.update(att, new String[]{"recordId"});
			}
		}
		 
		return new KVMap<String,String>().add("id", account.getId());
	}
	
	@RequestMapping(method=RequestMethod.GET)
	public Account  getAccount(){
		Account account=new Account();
		account.setAccount("get方法");
		account.setCellphone("15801187545");
		System.out.println("来到get方法");
		return account;
	}
	
	@RequestMapping(method=RequestMethod.DELETE)
	public Account  deleteAccount(){
		Account account=new Account();
		account.setAccount("delete方法");
		account.setCellphone("15801187545");
		System.out.println("来到delete方法");
		return account;
	}
	
	@RequestMapping(method=RequestMethod.PUT)
	public Account putAccount(@RequestBody AuthorizationCommand cmd){
		System.out.println(cmd);
		Account account=new Account();
		account.setAccount("put方法");
		account.setCellphone("15801187545");
		System.out.println("来到put方法");
		return account;
	}

}
